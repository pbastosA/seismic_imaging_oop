#!/bin/bash

file_manager="../src/utils/file_manager/file_manager.cpp"

model="../src/model/model.cpp"
gaussian="../src/utils/smoothing/gaussian.cpp"
trilinear="../src/utils/interpolation/trilinear.cpp"

geometry="../src/geometry/geometry.cpp"
regular="../src/geometry/regular/regular.cpp"
circular="../src/geometry/circular/circular.cpp"
geometry_main="../src/geometry/geometry_main.cpp"

picking="../src/auto_picking/auto_picking.cpp"
qc_picks="../src/auto_picking/qc_picking.py"

eikonal=""
block_FIM=""
accurate_FSM=""
classic_method=""

tomography=""
classical_approach=""

USER_MESSAGE="
Usage:

----------------------------------------------------------------------------------------
|      First steps      |        Second steps         |          Third steps           |
---------------------------------------------------------------------------------------|  
| $ $0 -build_all    | $ $0 -check_model        | $ $0 -run_tomography        |
| $ $0 -auto_picking | $ $0 -check_geometry     | $ $0 -check_recovered_model |
| $ $0 -check_data   | $ $0 -check_illumination | $ $0 -check_convergence     |
----------------------------------------------------------------------------------------         

Warning: Give a parameter in \033[31mred\033[m information!
"

# Check if user provide some parameter
[ -z "$1" ] && {
	echo " "
	echo "You didn't provide any parameter!" 
	echo "Type $0 -help for more info"
	echo " "  
	exit 1 
}

case "$1" in

-help ) 
	echo -e "$USER_MESSAGE"
	exit 0
;;

-build_all) 

    # geometry_main
    pgc++ $geometry_main $geometry $circular $regular $file_manager -lm -o ../bin/geometry.exe

    # eikonal_main
    # tomography_main

    rm *.o

	exit 0
;;

-auto_picking) 



	exit 0
;;

-check_data) 



	exit 0
;;

-check_model) 
    
    python3 ../src/utils/py_codes/check_model.py parameters.txt

	exit 0
;;

-check_geometry) 

    ./../bin/geometry.exe parameters.txt
    python3 ../src/utils/py_codes/check_geometry.py parameters.txt

	exit 0
;;

-tomography) 


	exit 0
;;

* ) ## Message for bad parameter
	
	echo -e "\033[31mERRO: Option $1 unknown!\033[m"
	echo -e "\033[31mType $0 -h for help \033[m"
	exit 3
;;

esac



# cgls="../../src/cgls/cgls.cu"
# utils="../../src/essentials/utils.cpp"
# model="../../src/essentials/model.cpp"
# eikonal="../../src/eikonal/eikonal.cpp"
# geometry="../../src/essentials/geometry.cpp"
# tomography="../../src/tomography/tomography.cpp"

# library="/usr/local/cuda/lib64/"
# include="/usr/local/cuda/include/"

# flags="-acc -fast -ta=tesla,cc60 -std=c++11 -g -lm -lcusparse -lcublas"

# pgc++ $cgls $utils $model $geometry $eikonal $tomography tomography_main.cpp $flags -I $include -L $library -o tomography_main.exe

# ./tomography_main.exe ../parameters.txt

# # Clean it up
# rm *.o *.exe 
