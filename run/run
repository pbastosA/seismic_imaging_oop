#!/bin/bash

library="/usr/local/cuda/lib64/"
include="/usr/local/cuda/include/"

gaussian="../src/utils/smoothing/gaussian.cpp"
trilinear="../src/utils/interpolation/trilinear.cpp"
file_manager="../src/utils/file_manager/file_manager.cpp"

regular="../src/geometry/regular/regular.cpp"
circular="../src/geometry/circular/circular.cpp"
geometry_main="../src/geometry/geometry_main.cpp"

classic="../src/eikonal/classic/classic.cpp"
block_FIM="../src/eikonal/block_FIM/block_FIM.cpp"
kernel_FIM="../src/eikonal/block_FIM/cuda_kernel.cu"
accurate_FSM="../src/eikonal/accurate_FSM/accurate_FSM.cpp"
eikonal_main="../src/eikonal/eikonal_main.cpp"

adjoint_state=""
least_squares="../src/tomography/least_squares/least_squares.cpp"
tomography_main="../src/tomography/tomography_main.cpp"

flags="-acc -fast -ta=tesla,cc60 -std=c++17"

USER_MESSAGE="
Usage:

    $ $0 -build_all             #        
    $ $0 -check_model           # 
    $ $0 -check_geometry        # 
    $ $0 -tomography            # 
    $ $0 -check_output_model    # 
    $ $0 -check_convergence     # 
"

# Check if user provide some parameter
[ -z "$1" ] && {
	echo " "
	echo "You didn't provide any parameter!" 
	echo "Type $0 -help for more info"
	echo " "  
	exit 1 
}

case "$1" in

-help ) 
	echo -e "$USER_MESSAGE"
	exit 0
;;

-build_all) 

    echo -e "Compiling stand-alone executables!"

    echo -e "\n../bin/\033[31mgeometry.exe\033[m: \n" 
    pgc++ $file_manager $circular $regular $geometry_main -lm -o ../bin/geometry.exe

    echo -e "\n../bin/\033[31meikonal.exe\033[m: \n" 
    pgc++ $file_manager $trilinear $regular $circular $classic $kernel_FIM $block_FIM $accurate_FSM $eikonal_main $flags -I $include -L $library --diag_suppress bad_macro_redef -lm -o ../bin/eikonal.exe

    echo -e "\n../bin/\033[31mtomography.exe\033[m: \n" 
    pgc++ $file_manager $trilinear $gaussian $regular $circular $classic $kernel_FIM $block_FIM $accurate_FSM $adjoint_state $least_squares $tomography_main $flags -I $include -L $library --diag_suppress bad_macro_redef -lm -o ../bin/tomography.exe
    
    rm *.o

	exit 0
;;

-check_model) 
    
    python3 ../src/utils/py_codes/check_model.py parameters.txt

	exit 0
;;

-check_geometry) 

    ./../bin/geometry.exe parameters.txt
    python3 ../src/utils/py_codes/check_geometry.py parameters.txt

	exit 0
;;

-eikonal)
    
    ./../bin/eikonal.exe parameters.txt
    
	exit 0
;;

-tomography) 

    ./../bin/tomography.exe parameters.txt

	exit 0
;;

-check_output_model)

    exit 0
;;

-check_convergence)

    exit 0
;;

* ) ## Message for bad parameter
	
	echo -e "\033[31mERRO: Option $1 unknown!\033[m"
	echo -e "\033[31mType $0 -h for help \033[m"
	exit 3
;;

esac
